{"version":3,"file":"static/js/305.a85eb8f5.chunk.js","mappings":"qOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAIMC,EAAQ,mCAAG,oGACQD,EAAAA,EAAAA,IAAU,0CADlB,OACTE,EADS,OAJAC,EAMND,EAASE,KAAKD,MALvBH,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDG,GAGzC,iCAJA,IAAAA,CAIA,UAAH,qDAKDE,EAAa,mCAAG,oGACrBJ,IADqB,uBAEJD,EAAAA,EAAAA,IAAU,yBAFN,cAErBE,EAFqB,yBAGpBA,EAASE,KAAKE,SAHM,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,uFACpBP,IADoB,uBAEHD,EAAAA,EAAAA,IAAA,gCAAmCQ,IAFhC,cAEpBN,EAFoB,yBAGnBA,EAASE,MAHU,2CAAH,qD,8ICjBZK,EAAa,SAAC,GAAgB,IAAD,EAAbC,EAAa,EAAbA,OACnBF,EAA4DE,EAA5DF,GAAIG,EAAwDD,EAAxDC,MAAOC,EAAiDF,EAAjDE,iBAAkBC,EAA+BH,EAA/BG,aAAcC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEzD,OACE,2BACE,UAAC,KAAD,CAASC,GAAE,WAAMR,GAAjB,WACE,gBAAKS,IAAKL,EAAmB,cAAeM,IAAI,iBAChD,uBAAIP,QAEN,gDACqB,0BAAOE,QAE5B,oCACA,iCAAIC,EAAKK,cAAT,aAAI,EAAaC,KAAK,SACtB,qCACU,0BAAOL,SAItB,ECnBYM,EAAa,SAAC,GAAiB,IAAff,EAAc,EAAdA,QAC3B,OACE,wBACGA,EAAQgB,KAAI,SAAAZ,GAAM,OACjB,SAACD,EAAD,CAA4BC,OAAQA,GAAnBA,EAAOF,GADP,KAKxB,ECwBD,EA7BgB,WACd,OAA8Be,EAAAA,EAAAA,UAAS,IAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGuBrB,EAAAA,EAAAA,KAHvB,OAGUD,EAHV,OAIIoB,EAAWpB,GAJf,gDAMIwB,QAAQC,IAAI,KAAMC,SANtB,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadK,EACD,GAAE,KAGD,4BACE,oCACCN,IAAa,oCACd,SAACJ,EAAD,CAAYf,QAASA,MAG1B,C","sources":["api.js","components/CourseItem/CourseItem.jsx","components/CourseList/CourseList.jsx","pages/Courses/Courses.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.wisey.app/api/v1';\n\nconst setToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst getToken = async () => {\n  const response = await axios.get('/auth/anonymous?platform=subscriptions');\n  setToken(response.data.token);\n};\n\nexport const getAllCourses = async () => {\n  await getToken();\n  const response = await axios.get('/core/preview-courses');\n  return response.data.courses;\n};\n\nexport const getOneCourse = async id => {\n  await getToken();\n  const response = await axios.get(`/core/preview-courses/${id}`);\n  return response.data;\n};\n","import { NavLink } from 'react-router-dom';\n\nexport const CourseItem = ({ course }) => {\n  const { id, title, previewImageLink, lessonsCount, meta, rating } = course;\n\n  return (\n    <li>\n      <NavLink to={`/${id}`}>\n        <img src={previewImageLink + '/cover.webp'} alt=\"courseImage\" />\n        <p>{title}</p>\n      </NavLink>\n      <p>\n        Number of lessons: <span>{lessonsCount}</span>\n      </p>\n      <p>Skils: </p>\n      <p>{meta.skills?.join(', ')}</p>\n      <p>\n        Rating: <span>{rating}</span>\n      </p>\n    </li>\n  );\n};\n","import { CourseItem } from 'components/CourseItem/CourseItem';\n\nexport const CourseList = ({ courses }) => {\n  return (\n    <ul>\n      {courses.map(course => (\n        <CourseItem key={course.id} course={course} />\n      ))}\n    </ul>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getAllCourses } from 'api';\n\nimport { CourseList } from 'components/CourseList/CourseList';\n\nconst Courses = () => {\n  const [courses, setCourses] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n\n  useEffect(() => {\n    async function getCourses() {\n      try {\n        setIsloading(true);\n        const data = await getAllCourses();\n        setCourses(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    getCourses();\n  }, []);\n\n  return (\n    <div>\n      <h1>Courses</h1>\n      {isLoading && <p>Loading</p>}\n      <CourseList courses={courses} />\n    </div>\n  );\n};\n\nexport default Courses;\n"],"names":["axios","getToken","response","token","data","getAllCourses","courses","getOneCourse","id","CourseItem","course","title","previewImageLink","lessonsCount","meta","rating","to","src","alt","skills","join","CourseList","map","useState","setCourses","isLoading","setIsloading","useEffect","console","log","message","getCourses"],"sourceRoot":""}