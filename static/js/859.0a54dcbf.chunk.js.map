{"version":3,"file":"static/js/859.0a54dcbf.chunk.js","mappings":"yOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAIMC,EAAQ,mCAAG,oGACQD,EAAAA,EAAAA,IAAU,0CADlB,OACTE,EADS,OAJAC,EAMND,EAASE,KAAKD,MALvBH,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAA,iBAAwDG,GAGzC,iCAJA,IAAAA,CAIA,UAAH,qDAKDE,EAAa,mCAAG,oGACrBJ,IADqB,uBAEJD,EAAAA,EAAAA,IAAU,yBAFN,cAErBE,EAFqB,yBAGpBA,EAASE,KAAKE,SAHM,2CAAH,qDAMbC,EAAY,mCAAG,WAAMC,GAAN,uFACpBP,IADoB,uBAEHD,EAAAA,EAAAA,IAAA,gCAAmCQ,IAFhC,cAEpBN,EAFoB,yBAGnBA,EAASE,MAHU,2CAAH,qD,sJCnBZK,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,iCACE,qCACA,+BACGA,QADH,IACGA,OADH,EACGA,EAASC,KAAI,SAAAC,GAAM,OAClB,2BACE,uBAAIA,EAAOC,SACX,kBACEC,IAAKJ,GAAWA,EAAQ,GAAGK,KAC3BC,UAAQ,EACRC,UAAQ,EACRC,YAAY,UAEd,oCACS,0BAAON,EAAOO,cAThBP,EAAOJ,GADE,QAiB3B,E,UC0BD,EA1CkB,WAChB,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,UAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,GAAa,GAFjB,UAGuBjB,EAAAA,EAAAA,GAAakB,GAHpC,OAGUrB,EAHV,OAIIkB,EAAUlB,GAJd,gDAMIwB,QAAQC,IAAI,KAAMC,SANtB,yBAQIN,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadO,EACD,GAAE,CAACN,IAEJ,IAAQZ,EAAgCQ,EAAhCR,MAAOH,EAAyBW,EAAzBX,QAASsB,EAAgBX,EAAhBW,YAExB,OACE,2BACGT,IAAa,oCACd,uBAAIV,KACJ,SAAC,IAAD,CAAaoB,IAAKvB,GAAWA,EAAQ,GAAGK,QAQxC,uBAAIiB,KAEJ,SAACvB,EAAD,CAASC,QAASA,MAGvB,C","sources":["api.js","components/Lessons/Lessons.jsx","pages/OneCourse/OneCourse.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.wisey.app/api/v1';\n\nconst setToken = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nconst getToken = async () => {\n  const response = await axios.get('/auth/anonymous?platform=subscriptions');\n  setToken(response.data.token);\n};\n\nexport const getAllCourses = async () => {\n  await getToken();\n  const response = await axios.get('/core/preview-courses');\n  return response.data.courses;\n};\n\nexport const getOneCourse = async id => {\n  await getToken();\n  const response = await axios.get(`/core/preview-courses/${id}`);\n  return response.data;\n};\n","export const Lessons = ({ lessons }) => {\n  return (\n    <>\n      <h2>Lessons</h2>\n      <ul>\n        {lessons?.map(lesson => (\n          <li key={lesson.id}>\n            <p>{lesson.title}</p>\n            <video\n              src={lessons && lessons[0].link}\n              autoPlay\n              controls\n              crossOrigin=\"true\"\n            ></video>\n            <p>\n              Status <span>{lesson.status}</span>\n            </p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getOneCourse } from 'api';\nimport { Lessons } from 'components/Lessons/Lessons';\nimport ReactPlayer from 'react-player';\n\nconst OneCourse = () => {\n  const [course, setCourse] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const { courseId } = useParams();\n\n  useEffect(() => {\n    async function getCourse() {\n      try {\n        setIsloading(true);\n        const data = await getOneCourse(courseId);\n        setCourse(data);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    }\n\n    getCourse();\n  }, [courseId]);\n\n  const { title, lessons, description } = course;\n\n  return (\n    <div>\n      {isLoading && <p>Loading</p>}\n      <p>{title}</p>\n      <ReactPlayer url={lessons && lessons[0].link} />\n      {/* <video\n        src={lessons && lessons[0].link}\n        autoPlay\n        controls\n        crossOrigin=\"true\"\n      ></video> */}\n\n      <p>{description}</p>\n\n      <Lessons lessons={lessons} />\n    </div>\n  );\n};\n\nexport default OneCourse;\n"],"names":["axios","getToken","response","token","data","getAllCourses","courses","getOneCourse","id","Lessons","lessons","map","lesson","title","src","link","autoPlay","controls","crossOrigin","status","useState","course","setCourse","isLoading","setIsloading","courseId","useParams","useEffect","console","log","message","getCourse","description","url"],"sourceRoot":""}